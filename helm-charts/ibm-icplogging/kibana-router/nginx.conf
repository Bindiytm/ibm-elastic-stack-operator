# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2020. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

{{ template "elk.settings.all.prepare" . -}}
daemon off;
error_log stderr debug;
env CLUSTER_DOMAIN;
env CLUSTER_NAME;
env AUTHORIZED_NAMESPACES;
env CLIENT_API_KEY;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    proxy_buffering off;

    upstream kibana {
        server 127.0.0.1:{{ .Values.kibana.internal }};
    }

    proxy_cache_path /tmp/nginx-mesos-cache levels=1:2 keys_zone=mesos:1m inactive=10m;

    lua_package_path '$prefix/conf/?.lua;;';
    lua_shared_dict mesos_state_cache 100m;
    lua_shared_dict shmlocks 1m;

    # Loading the auth module in the global Lua VM in the master process is a
    # requirement, so that code is executed under the user that spawns the
    # master process instead of 'nobody' (which workers operate under).
    init_by_lua_block {
        common = require "common"
        local use_auth = os.getenv("ADMINROUTER_ACTIVATE_AUTH_MODULE")
        if use_auth ~= "true" then
            ngx.log(
                ngx.NOTICE,
                "ADMINROUTER_ACTIVATE_AUTH_MODULE not `true`. " ..
                "Use dummy module."
                )
            authc = {}
            authc.validate_access_token_or_exit = function() return end
        else
            authc = require "oidc"
        end

        authz = require "rbac.kibanarouter"
    }

    {{- if eq (.Values.general.environment | lower) "openshift" }}
    resolver local=on;
    {{- else }}
    resolver kube-dns.kube-system.svc.{{ template "clusterDomain" . }};
    {{- end }}

    server {
        listen {{ .Values.general.ingressPort }} ssl default_server;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_certificate /opt/ibm/router/certs/kibanarouter.crt;
        ssl_certificate_key /opt/ibm/router/certs/kibanarouter.key;
        ssl_password_file /opt/ibm/router/tls-pass/appKeystorePassword;

        ssl_protocols {{ .Values.security.tls.version }};
        # Ref: https://github.com/cloudflare/sslconfig/blob/master/conf
        # Modulo ChaCha20 cipher.
        ssl_ciphers EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:!EECDH+3DES:!RSA+3DES:!MD5;
        ssl_prefer_server_ciphers on;

        server_name dcos.*;
        root /opt/ibm/router/nginx/html;

        access_by_lua_block {
  {{- if .Values.kibana.security.authc.enabled }}
    {{- if eq "icp" .Values.kibana.security.authc.provider }}
            authc.validate_access_token_or_exit();
    {{- end }}
  {{- end }}

  {{- if .Values.kibana.security.authz.enabled }}
    {{- if eq "icp" .Values.kibana.security.authz.provider }}
            authz.validate_or_exit();
    {{- end }}
  {{- end }}
        }

{{- if .Values.kibana.ingress.path }}
        location {{ .Values.kibana.ingress.path }} {
            return 302 {{ .Values.kibana.ingress.path }}/;
        }
{{- end }}

        location {{ .Values.kibana.ingress.path }}/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_pass https://kibana/;
        }
    }
}
